Update the structure of the project.

Add any useful figure which help understanding the algorithm applied.

Please follow the link when importing libraries:
https://peps.python.org/pep-0008/#imports
Use Snake Case to name the fields of the class not CamelCase.
Follow the link in writing the docstrings of classes & functions:
https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html



logs directory can be placed out of 'datachallenge' folder.
Check the LICENSE. (and in setup.py as well).
Update the README.md file according to new additions and misunderstood parts.
Add command line testing.

Add code to upload your trained model to google drive.

Apply cross validation instead of splitting data into fixed portions.
Kfold, RepeatedKFold, GroupKFold, StratifiedKFold, Hold-out, Leave-one-out, Leave-p-out

Appy some techniques to speed up training (16-bit precision, ex:https://towardsdatascience.com/pytorch-training-tricks-and-tips-a8808ebf746c)

Integrate W&B online platform with the code to simulate the model performance.

Preprocessing.

provide the same number of images from each class in a batch : https://stackoverflow.com/questions/67535660/how-to-construct-batch-that-return-equal-number-of-images-for-per-classes

Apply ensemble learning. (tested for two models  (cusnet & resnet50 ) and got acc: 0.95984)